name: fetch cache

permissions: {}

on:
  workflow_dispatch:
  schedule:
    - cron: "00 00 */3 * *"
jobs:
  fetch_cache:
    name: fetch cache
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - repo: https://github.com/coolsnowwolf/lede
            branch: master
            conf: x86_64.config
            p1p2: x86_64
          - repo: https://github.com/padavanonly/immortalwrt-mt798x-6.6
            branch: openwrt-24.10-6.6
            conf: zn-m5.config
            p1p2: zn-m5

    env:
      REPO_URL: ${{ matrix.repo }}
      REPO_BRANCH: ${{ matrix.branch }}
      FEEDS_CONF: feeds.conf.default
      TZ: Asia/Shanghai
      CONFIG_FILE: ${{ matrix.conf }}

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master
          fetch-depth: 0


      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo bash -c "curl -skL https://raw.githubusercontent.com/sbwml/actions/openwrt-build-setup/sources-24.04.list > /etc/apt/sources.list"
          sudo rm -rf /etc/apt/sources.list.d* /usr/local/lib/android* /etc/docker* /etc/firefox* /etc/mysql* /etc/php* /opt/google* /usr/share/dotnet* /usr/share/google* /usr/share/moby* /usr/share/mysql* /usr/share/php*
          sudo -E apt-get -qq update
          sudo -E apt-get -y purge azure* docker* dotnet* firefox* ghc* google* llvm* mongodb* mysql* php* powershell* snap* gfortran* microsoft-edge-stable
          sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang clang-18 cmake coreutils cpio curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc-multilib gettext git gnutls-dev gperf haveged help2man intltool jq lib32gcc-s1 libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libncurses5-dev libnsl-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-docutils python3-pip python3-ply python3-pyelftools qemu-utils re2c rename rsync scons squashfs-tools subversion swig texinfo uglifyjs unzip upx-ucl vim wget xmlto xxd zlib1g-dev zstd
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

      - name: Clone source code
        # working-directory: $GITHUB_WORKSPACE
        run: |
          df -hT $PWD
          git clone --single-branch --depth=1 --filter=blob:none $REPO_URL -b $REPO_BRANCH $GITHUB_WORKSPACE/openwrt
          echo "OPENWRT_PATH=$GITHUB_WORKSPACE/openwrt" >> $GITHUB_ENV

      - name: Generate cache mixkey
        id: gen_cache_mixkey
        # working-directory: ${{ env.WORKING_DIR }}
        run: |
            [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
            SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
            echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
            DEVICE_TARGET=$(cat openwrt/.config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
            echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
            DEVICE_SUBTARGET=$(cat openwrt/.config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
            echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x ${{ matrix.p1p2 }}-diy-part1.sh
          chmod +x gh-down.sh
          cd openwrt
          $GITHUB_WORKSPACE/${{ matrix.p1p2 }}-diy-part1.sh

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a
          
      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a
          
      - name: Load custom configuration
        env:
          GITHUB_TOKEN: ${{ secrets.AUTH_TOKEN }}
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
          chmod +x ${{ matrix.p1p2 }}-diy-part2.sh
          cd openwrt
          $GITHUB_WORKSPACE/${{ matrix.p1p2 }}-diy-part2.sh

      - name: Cache
        uses: HiGarfield/cachewrtbuild@main
        with:
          ccache: 'true'
          mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          prefix: ${{ env.OPENWRT_PATH }}
          skip_saving: 'true'
      
      # - name: Restore cached dl
      #   id: restore_cached_dl
      #   uses: actions/cache/restore@main
      #   with:
      #     path: ${{ env.WORKING_DIR }}/dl
      #     key: ${{ github.repository_id }}-dl-${{ github.run_id }}
      #     restore-keys: ${{ github.repository_id }}-dl-
