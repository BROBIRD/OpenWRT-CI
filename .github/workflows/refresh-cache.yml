name: fetch cache

permissions: {}

on:
  workflow_dispatch:
  schedule:
    - cron: "00 00 */3 * *"
jobs:
  fetch_cache:
    name: fetch cache
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - repo: https://github.com/coolsnowwolf/lede
            conf: x86_64.config
          - repo: https://github.com/immortalwrt/immortalwrt
            conf: cr660x-im.config

    env:
      REPO_URL: ${{ matrix.repo }}
      REPO_BRANCH: master
      TZ: Asia/Shanghai
      CONFIG_FILE: ${{ matrix.conf }}

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master
          fetch-depth: 0


      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo bash -c "curl -skL https://raw.githubusercontent.com/sbwml/actions/openwrt-build-setup/sources-24.04.list > /etc/apt/sources.list"
          sudo rm -rf /etc/apt/sources.list.d* /usr/local/lib/android* /etc/docker* /etc/firefox* /etc/mysql* /etc/php* /opt/google* /usr/share/dotnet* /usr/share/google* /usr/share/moby* /usr/share/mysql* /usr/share/php*
          sudo -E apt-get -qq update
          sudo -E apt-get -y purge azure* docker* dotnet* firefox* ghc* google* llvm* mongodb* mysql* php* powershell* snap* gfortran* microsoft-edge-stable
          sudo -E apt-get -qq install build-essential flex bison clang-18 cmake g++ gawk gcc-multilib g++-multilib gettext git gnutls-dev libfuse-dev libncurses5-dev libssl-dev python3 python3-pip python3-ply python3-pyelftools rsync unzip zlib1g-dev file wget subversion patch upx-ucl autoconf automake curl asciidoc binutils bzip2 lib32gcc-s1 libc6-dev-i386 uglifyjs msmtp texinfo libreadline-dev libglib2.0-dev xmlto libelf-dev libtool autopoint antlr3 gperf ccache swig coreutils haveged scons libpython3-dev rename qemu-utils jq
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

      - name: Clone source code
        # working-directory: $GITHUB_WORKSPACE
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH $GITHUB_WORKSPACE/openwrt
          echo "OPENWRT_PATH=$GITHUB_WORKSPACE/openwrt" >> $GITHUB_ENV

      - name: Generate cache mixkey
        id: gen_cache_mixkey
        # working-directory: ${{ env.WORKING_DIR }}
        run: |
            [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
            SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
            echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
            DEVICE_TARGET=$(cat openwrt/.config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
            echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
            DEVICE_SUBTARGET=$(cat openwrt/.config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
            echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV


      - name: Cache
        uses: HiGarfield/cachewrtbuild@main
        with:
          ccache: 'true'
          mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          prefix: ${{ env.OPENWRT_PATH }}
          skip_saving: 'true'
      
      # - name: Restore cached dl
      #   id: restore_cached_dl
      #   uses: actions/cache/restore@main
      #   with:
      #     path: ${{ env.WORKING_DIR }}/dl
      #     key: ${{ github.repository_id }}-dl-${{ github.run_id }}
      #     restore-keys: ${{ github.repository_id }}-dl-
